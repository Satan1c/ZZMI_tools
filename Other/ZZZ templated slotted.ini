{% extends "base.ini" %}

{% block constantscredit -%}
	{% if credit != "" -%}
[Constants]
global $active = 0
global $creditinfo = 1

[Present]
post $active = 0
run = CommandList.CreditInfo
	{% endif -%}
{% endblock %}

{% block commandlistscredit %}
	{% if credit != "" -%}
[CommandList.CreditInfo]
if $creditinfo && $active
	pre Resource\ShaderFixes\help.ini\Notification = Resource.CreditInfo
	pre run = CustomShader\ShaderFixes\help.ini\FormatText
	pre $\ShaderFixes\help.ini\notification_timeout = time + 5.0
	$creditinfo = 0
endif
	{% endif -%}
{% endblock -%}

{% block resourcecredit -%}
	{% if credit != "" -%}
[Resource.CreditInfo]
type = Buffer
data = "Created by {{ credit }}"
	{% endif -%}
{% endblock -%}

{% block overridesbuffers -%}
	{% for component in char_hash if component["draw_vb"] != "" -%}
		{% set char_name = character_name -%}
		{% set comp_name = component.component_name -%}
[TextureOverride {{ char_name }} {{ comp_name }} Blend]
hash = {{ component.blend_vb }}
vb2 = Resource.{{ char_name }}.{{ comp_name }}.Blend

if DRAW_TYPE == 1
	vb0 = Resource.{{ char_name }}.{{ comp_name }}.Position
	draw = {{ component.total_verts }}, 0
		{% if credit != "" %}
	$active = 1
		{% endif %}
endif

[TextureOverride {{ char_name }} {{ comp_name }} Texcoord]
hash = {{ component.texcoord_vb }}
vb1 = Resource.{{ char_name }}.{{ comp_name }}.Texcoord

[TextureOverride {{ char_name }} {{ comp_name }} VertexLimitRaise]
hash = {{ component.draw_vb }}
override_vertex_count = {{ component.total_verts }}
override_byte_stride = {{ component.strides[0] }}

	{% endfor -%}
{% endblock -%}

{% block overridesibs -%}
	{% for component in char_hash if component["draw_vb"] != "" -%}
		{% set tabs = "\t" -%}
[TextureOverride {{ character_name }} {{component.component_name}} IB]
hash = {{ component.ib }}
handling = skip
		{% if operator.join_meshes: -%}
drawindexed = auto
		{% endif %}

		{% for object in component.objects -%}
			{% set main_name = component.component_name ~ component.object_classifications[loop.index0] %}
[TextureOverride {{ character_name }} {{main_name}}]
hash = {{ component.ib }}
match_first_index = {{ component.object_indexes[loop.index0] }}
			{% if object.offsets|rejectattr("3","lt",1)|list|length > 0 %}
ib = Resource.{{ character_name }}.{{main_name}}.IB
			{% else %}
ib = null
			{% endif %}

			{% for textures in component.texture_hashes[loop.index0] -%}
Resource\ZZMI\{{ textures[0] }} = ref Resource.{{ character_name }}.{{main_name}}.{{ textures[0] }}
			{% endfor %}
run = CommandList\ZZMI\SetTextures

			{% for off in object.offsets if off[3] > 0 -%}
				{% if loop.previtem and loop.previtem[0] != off[0] -%}
{{ tabs * off[1] }}; {{ off[0] }}
				{% endif %}
{{ tabs * off[1] }}; {{ off[2] }}
{{ tabs * off[1] }}drawindexed = {{ off[3]}}, {{ off[5] }}, 0
			{% endfor %}

		{% endfor %}
	{% endfor %}
	{% for component in char_hash if component["draw_vb"] == "" -%}
		{% set tabs = "\t" -%}
[TextureOverride {{character_name}} {{component.component_name}} IB]
hash = {{ component.ib }}
Resource\ZZMI\Diffuse = ref Resource.{{character_name}}.{{component.component_name}}.Diffuse
run = CommandList\ZZMI\SetTextures
	{% endfor %}
{% endblock  %}

{% block resourcebuffers -%}
	{% for component in char_hash -%}
		{% set char_name = character_name -%}
		{% set comp_name = component.component_name ~ component.object_classifications[loop.index0] -%}
		{% if component.strides %}
[Resource.{{ char_name }}.{{ component.component_name }}.Position]
type = Buffer
stride = {{ component.strides.0 }}
filename = {{ char_name }}{{ component.component_name }}Position.buf

[Resource.{{ char_name }}.{{ component.component_name }}.Blend]
type = Buffer
stride = {{ component.strides.1 }}
filename = {{ char_name }}{{ component.component_name }}Blend.buf

[Resource.{{ char_name }}.{{ component.component_name }}.Texcoord]
type = Buffer
stride = {{ component.strides.2 }}
filename = {{ char_name }}{{ component.component_name }}Texcoord.buf
		{% endif %}

		{% for object in component.objects -%}
			{% set comp_name = component.component_name ~ component.object_classifications[loop.index0] -%}
[Resource.{{ char_name }}.{{ comp_name }}.IB]
type = Buffer
format = DXGI_FORMAT_R32_UINT
filename = {{ object.fullname }}.ib

		{% endfor %}
	{% endfor %}
{% endblock %}

{% block overridestextures -%}
	{% for component in char_hash -%}
		{% set comp_name = character_name ~ component.component_name %}
		{% for object in component.texture_hashes -%}
			{% set auxidx = loop.index0 %}
			{% for tex in object -%}
				{% set main_name = comp_name ~ component.object_classifications[auxidx] %}
[TextureOverride {{ main_name }} {{ tex[0] }}]
hash = {{ tex[2] }}
this = Resource.{{ main_name }}.{{ tex[0] }}

			{% endfor %}
		{% endfor %}
	{% endfor %}
{% endblock %}

{% block resourcetextures -%}
	{% set written_textures = [] %}
	{% for component in char_hash -%}
		{% set comp_name = character_name ~ component.component_name %}
		{% for object in component.texture_hashes -%}
			{% set auxidx = loop.index0 %}
			{% for tex in object -%}
				{% set main_name = component.component_name ~ component.object_classifications[auxidx] %}
				{% if component["draw_vb"] == "" %}
					{% if tex[2] is not in(written_textures) %}
[Resource.{{character_name}}.{{ component.component_name }}.{{ tex[0] }}]
filename = {{character_name}}{{ main_name }}{{ tex[0] }}{{tex[1]}}
						{% set _ = written_textures.append(tex[2]) %}
					{% endif %}
				{% else %}
[Resource.{{character_name}}.{{ main_name }}.{{ tex[0] }}]
filename = {{character_name}}{{ main_name }}{{ tex[0] }}{{tex[1]}}
				{% endif %}

			{% endfor %}
		{% endfor %}
	{% endfor %}
{% endblock %}

{% block constants %}
	{{- self.constantscredit() -}}
{% endblock %}

{% block overrides %}
	{{- self.overridesbuffers() -}}
	{{- self.overridesibs() -}}
{% endblock %}
#{{- self.overridestextures() -}}

{% block commandlists %}
	{{- self.commandlistscredit() -}}
{% endblock %}

{% block resources %}
	{{- self.resourcebuffers() -}}
	{{- self.resourcetextures() -}}
	{{- self.resourcecredit() -}}
{% endblock %}
